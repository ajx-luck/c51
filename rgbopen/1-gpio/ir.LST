C51 COMPILER V9.01   IR                                                                    10/22/2020 19:26:56 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN ir.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ir.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\HeadFile) DEBUG OBJECTEXTEND TABS(2
                    -)

line level    source

   1          #include "user.h"
   2          
   3          
   4          //????
   5          void cleanData()
   6          {
   7   1              accTimeH = 0;
   8   1              MaybeRemoteStart = 0;       //?????
   9   1              RemoteStart = 0;
  10   1              sleepFlag = 0;
  11   1              bitIndex = 0;
  12   1              OneCode = 0;
  13   1              ZeroCode = 0;
  14   1              ReadOver = 0;
  15   1      }
  16          
  17          void proHight()
  18          {
  19   1          TR1 = 0;
  20   1        T1Counter = TH1;
  21   1        T1Counter = T1Counter << 5;
  22   1        T1Counter = T1Counter + (TL1&0x1F);
  23   1        T1Counter = T1Counter + (accTimeH*8192);
  24   1        T1Counter = T1Counter;
  25   1        TL1 = (8192-8192) & 0x1F;       //初始值低字节，TL0 的高 3 位是无效的
  26   1        TH1 = (8192-8192) >> 5; 
  27   1        accTimeH = 0;
  28   1        TR1 = 1;
  29   1          if(MaybeRemoteStart && T1Counter > (HeadCont_H - (FaultTolerant*FaultTolerantX)) && T1Counter < (HeadCon
             -t_H + (FaultTolerant*FaultTolerantX)))
  30   1          {
  31   2                      MaybeRemoteStart = 0;       //?????
  32   2                      RemoteStart = 1;
  33   2                      sleepFlag = 0;
  34   2                      bitIndex = 0;
  35   2                      OneCode = 0;
  36   2                      ZeroCode = 0;
  37   2                      ReadOver = 0;
  38   2          }
  39   1          else if(RemoteStart)
  40   1          {
  41   2            if((T1Counter> (OneCode_H - FaultTolerant))&&(T1Counter < (OneCode_H + FaultTolerant)))
  42   2                  {
  43   3                      OneCode = 1;
  44   3                      ZeroCode = 0;
  45   3                  }
  46   2                  else
  47   2                  {
  48   3                      if((T1Counter > (Zero_H - FaultTolerant))&&(T1Counter < (Zero_H + FaultTolerant)))
  49   3                      {
  50   4                          ZeroCode = 1;
  51   4                          OneCode = 0;
  52   4                      }
  53   3                      else
C51 COMPILER V9.01   IR                                                                    10/22/2020 19:26:56 PAGE 2   

  54   3                      {
  55   4                          ZeroCode = 0;
  56   4                          OneCode = 0;
  57   4                      }
  58   3                  }
  59   2                  
  60   2                  if(OneCode)
  61   2                  {
  62   3                      //?????bit ?1
  63   3                      GetOneByte(1);
  64   3                  }
  65   2                else if(ZeroCode)
  66   2                  {
  67   3                      //?????bit ?0
  68   3                      GetOneByte(0);
  69   3                  }
  70   2          }
  71   1          else
  72   1          {
  73   2             MaybeRemoteStart = 0;       //?????
  74   2                   RemoteStart = 0;
  75   2                  sleepFlag = 0;
  76   2                  bitIndex = 0;
  77   2                  OneCode = 0;
  78   2                  ZeroCode = 0;
  79   2                  ReadOver = 0;
  80   2          
  81   2          }
  82   1        
  83   1          
  84   1      }
  85          
  86          void proLow()
  87          {
  88   1        TR1 = 0;
  89   1        T1Counter = TH1;
  90   1        T1Counter = T1Counter << 5;
  91   1        T1Counter = T1Counter + (TL1&0x1F);
  92   1        T1Counter = T1Counter + (accTimeH*8192);
  93   1        T1Counter = T1Counter;
  94   1        TL1 = (8192-8192) & 0x1F;       //初始值低字节，TL0 的高 3 位是无效的
  95   1        TH1 = (8192-8192) >> 5; 
  96   1        accTimeH = 0;
  97   1        TR1 = 1;
  98   1        if((T1Counter > (HeadCont_L - (FaultTolerant*FaultTolerantX)))&&(T1Counter < (HeadCont_L + (FaultTolerant
             -*FaultTolerantX))))
  99   1          {
 100   2              RemoteStart = 0;       //?????
 101   2              MaybeRemoteStart = 1;   //???????
 102   2              sleepFlag = 0;
 103   2              bitIndex = 0;
 104   2              OneCode = 0;
 105   2              ZeroCode = 0;
 106   2              ReadOver = 0;
 107   2          }
 108   1        else if(RemoteStart)
 109   1        {
 110   2      //      if((T1Counter > (FootCont_L - FaultTolerant)) &&(T1Counter < (FootCont_L + (FaultTolerant*FaultTole
             -rantX)))) //???,??????????
 111   2      //        {
 112   2      //            ReadOver = 1;
 113   2      //            OneCode = 0;
C51 COMPILER V9.01   IR                                                                    10/22/2020 19:26:56 PAGE 3   

 114   2      //            ZeroCode = 0;
 115   2      //            RemoteStart = 0;
 116   2      //            bitIndex = 0;
 117   2      //        }
 118   2          
 119   2          if((T1Counter >(OneCode_L - FaultTolerant))&&(T1Counter < (OneCode_L + FaultTolerant)))
 120   2              {
 121   3                  //????
 122   3                 _nop_();
 123   3              }
 124   2              else
 125   2              {
 126   3                  //????,??????
 127   3                  cleanData();
 128   3                  
 129   3              }
 130   2        }
 131   1          
 132   1      }
 133          
 134          
 135          void GetOneByte(u8t bitNub)
 136          {
 137   1        if(RemoteStart)
 138   1        {
 139   2              if(bitIndex == 0)
 140   2            {
 141   3              bitIndex = 0;
 142   3              value = 0;
 143   3              data1 = data2 = data3 = data4 = 0;
 144   3            }
 145   2            ++bitIndex;
 146   2            if(bitNub)
 147   2            {
 148   3              value |= 0x80;
 149   3            
 150   3            }
 151   2            if(bitIndex == 8)
 152   2            {
 153   3              data1 = value;
 154   3            }
 155   2            else if(bitIndex == 16)
 156   2            {
 157   3              data2 = value;
 158   3      
 159   3            }
 160   2            else if(bitIndex == 24)
 161   2            {
 162   3              data3 = value;
 163   3      
 164   3            }
 165   2            else if(bitIndex == 32)
 166   2            {
 167   3              data4 = value;
 168   3                  ReadOver = 1;
 169   3                      OneCode = 0;
 170   3                      ZeroCode = 0;
 171   3                      RemoteStart = 0;
 172   3                      bitIndex = 0;
 173   3              
 174   3            }
 175   2            value = value >> 1;
C51 COMPILER V9.01   IR                                                                    10/22/2020 19:26:56 PAGE 4   

 176   2        }
 177   1      }
 178          
 179          
 180          /*****************************************************
 181          *函数名称：void init_timer1(void)
 182          *函数功能：Timer1初始化配置
 183          *入口参数：
 184          *出口参数：
 185          *****************************************************/
 186          void init_timer1(void)
 187          {
 188   1        TMOD &= 0x0f;                 //定时器,时钟为系统时钟 12 分频 
 189   1                        //模式0,TL1 和 TH1 组成 13 位定时器/计数器
 190   1          TL1 = (8192-41) & 0x1F;       //初始值低字节，TL1 的高 3 位是无效的
 191   1          TH1 = (8192-41) >> 5;         //初始值高字节(1ms@16MHz)
 192   1                      
 193   1          ET1 = 1;  //开中断 定时器 1 中断使能控制位
 194   1          EA = 1;   //总中断
 195   1          TR1 = 1;  //启动定时器
 196   1      }
 197          
 198          
 199          /*****************************************************
 200          * 中断服务函数
 201          *****************************************************/
 202          void timer1_isr (void) interrupt 3  
 203          {
 204   1          /* set timer1 as mode0 (13-bit) */
 205   1          TL1 = (8192-8192) & 0x1F;       //初始值低字节，TL0 的高 3 位是无效的
 206   1          TH1 = (8192-8192) >> 5;         //初始值高字节(1ms@16MHz)
 207   1        // todo ...
 208   1          ++accTimeH;
 209   1          //P35=~P35;
 210   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    471    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     43    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
